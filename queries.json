{
	"sessions":
	{
		"query":"select game_user_id as userid, max(header.hw_info.platform) platform_id, header.env as env, game_id, game_user_no, from_unixtime(min(client_utc)) start_time, min(client_utc) as start_utc, header.session_id, max(header.playtime) seconds_played, count(distinct if(type in ('battle_start','battle_end'),get_json_object(ctx,'$.battle_id'),0)) -1 attack_count, count(1) action_count, coalesce(max(header.revenue.usd),0) gross_rev, coalesce(max(header.revenue.usd),0) net_rev, coalesce(max(header.revenue.num_payments),0) txns, min(lvls.l) min_level, max(lvls.l) max_level, min(lvls.bl) min_cc_level, max(lvls.bl) max_cc_level, max(if(batch_info.source='client',batch_info.ip,'')) ip, max(if(batch_info.source='client',batch_info.geo,'')) geo, max(header.user_info.idfa) as idfa, max(header.user_info.idfv) as idfv, max(if(batch_info.source='client',batch_info.user_agent,'')) user_agent, concat(max(header.hw_info.os)) os, max(header.hw_info.device) device_type from base_events where game_id in ('BYMU','WCM','TOME') and year >= @YEAR@ and month >= @MONTH@ AND day >= @DAY@ and header.type='game' and game_user_id is not null and header.session_id is not null and header.session_id != '' and game_user_id != 'invalid' group by game_id, game_user_id, game_user_no, header.session_id, header.env having start_utc >= UNIX_TIMESTAMP(concat(year, '-',month,'-',day, ' 12:00:00'))",
		"dest_table":"an.sessions",
		"id_field":"start_utc",
		"pkey":["userid","env", "game_id", "session_id"]
	},
		"users":
	{
		"query":"select g.game_user_id as userid, g.game_id, min(b.game_user_no) game_user_no, g.env, min(g.install_date) as start_utc, min(from_unixtime(g.install_date)) as start_time, min(g.sessions.last.server_utc[0]) as last_utc, max(from_unixtime(g.sessions.last.server_utc[0])) as last_time, min(g.user_ids.last.idfa) idfa, min(g.user_ids.last.idfv) idfv, min(if(b.gross_rev>0,b.start_utc,'')) first_payment_utc, min(if(b.gross_rev>0,b.start_time,'')) first_payment_time, sum(b.gross_rev) gross_rev_primary, sum(b.net_rev) net_rev_primary, count(distinct to_date(b.start_time)) days_played, int(SUM(seconds_played/60)) as minutes_played, count(distinct session_id) as sessions_played, max(b.max_level) level, max(b.max_cc_level) cc_level, max(b.max_pvp_score) pvp_score, min(hw_info.last.device[0]) device, min(hw_info.last.cpu[0]) cpu, min(hw_info.last.gpu[0]) gpu, min(versions.last.Flash_version) flash_version, min(versions.last.Unity_version) unity_version, min(demo.last.locale[0]) game_locale, min(social.last.friend_ct) network_friend_count, min(social.last.game_friend_ct) game_friend_count from game_users g left outer join ( select game_user_id as userid, max(header.hw_info.platform) platform, max(header.env) as env, game_id, game_user_no, header.session_id, min(client_utc) as start_utc, from_unixtime(min(client_utc)) start_time, max(header.playtime) seconds_played, count(distinct if(type='battle',get_json_object(ctx,'$.battle_id'),0)) -1 attack_count, count(1) action_count, coalesce(max(header.revenue.usd),0) gross_rev, coalesce(max(header.revenue.usd),0) net_rev, coalesce(max(header.revenue.num_payments),0) txns, min(lvls.l) min_level, max(lvls.l) max_level, min(lvls.bl) min_cc_level, max(lvls.bl) max_cc_level, max(lvls.pvp) max_pvp_score, max(if(batch_info.source='client',batch_info.ip,'')) ip, max(if(batch_info.source='client',batch_info.geo,'')) geo, max(header.user_info.idfa) as idfa, max(header.user_info.idfv) as idfv, max(if(batch_info.source='client',batch_info.user_agent,'')) user_agent, concat(max(header.hw_info.os)) os, max(header.hw_info.device) device_type from base_events where game_id in ('BYMU','WCM','TOME') and year = 2014 and month >= 5 and day >= 1 and header.type='game' and game_user_id is not null and header.session_id is not null and header.session_id != '' and game_user_id != 'invalid' group by game_id, game_user_id, game_user_no, header.session_id) b on (g.game_user_id = b.userid and g.game_id = b.game_id and g.env = b.env) where g.game_id in ('BYMU','WCM','TOME') group by g.game_user_id, g.game_id, g.env",
		"dest_table":"an.users",
		"id_field":"last_utc",
		"pkey":["userid", "env", "game_id"]
	},
			"inventory":
	{
		"query":"SELECT game_user_id as userid, game_id, header.env, header.session_id, client_utc, get_json_object(ctx, '$.name') name, get_json_object(ctx, '$.lvl') lvl, get_json_object(ctx, '$.qty') qty, get_json_object(ctx, '$.reason') reason, lvls.l, lvls.bl, lvls.pve, lvls.pvp FROM base_events WHERE game_id in ('BYMU', 'WCM', 'TOME') and year = @YEAR@ and month >= @MONTH@ and day >= @DAY@ and type = 'inventory' and game_user_id is not null and header.session_id is not null and header.session_id != '' and game_user_id != 'invalid'",
		"dest_table":"an.inventory",
		"id_field" : "client_utc",
		"pkey":["game_id","userid", "start_utc", "env", "name", "reason"]
	}
}